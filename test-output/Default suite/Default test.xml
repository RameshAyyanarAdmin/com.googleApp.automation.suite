<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="hp-PC" failures="0" tests="2" name="Default test" time="7.681" errors="0" timestamp="2021-12-12T20:50:48 IST">
  <testcase classname="com.googleApp.test.InitializeTest" name="@BeforeMethod beforeTest" time="7.614">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.WebDriver.manage()&amp;quot; because the return value of &amp;quot;com.googleApp.driver.DriverManager.getDriver()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.manage()" because the return value of "com.googleApp.driver.DriverManager.getDriver()" is null
at com.googleApp.driver.Driver.<init>(Driver.java:31)
at com.googleApp.driver.Driver.initialize(Driver.java:37)
at com.googleApp.test.InitializeTest.beforeTest(InitializeTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase classname="com.googleApp.test.InitializeTest" name="@AfterMethod afterTest" time="-1.639322448256E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="com.googleApp.test.InitializeTest" name="@BeforeMethod beforeTest" time="-1.639322448258E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTest -->
  <testcase classname="com.googleApp.test.InitializeTest" name="@AfterMethod afterTest" time="-1.639322448264E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTest -->
  <testcase classname="com.googleApp.test.TestClass" name="testCase1" time="0.0">
    <skipped/>
  </testcase> <!-- testCase1 -->
  <testcase classname="com.googleApp.test.TestClass" name="testCase2" time="0.0">
    <skipped/>
  </testcase> <!-- testCase2 -->
</testsuite> <!-- Default test -->
